# Generated by Django 5.2.3 on 2025-07-07 18:57

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aretina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anarana', models.CharField(max_length=200)),
                ('famaritana', models.TextField()),
                ('sary', models.ImageField(blank=True, null=True, upload_to='sary_aretina/')),
                ('daty_nampidirana', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mpampiasa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('anarana_feno', models.CharField(max_length=150, verbose_name='Anarana feno')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar/', verbose_name='Sary')),
                ('no_telifonina', models.CharField(blank=True, max_length=30, verbose_name='Nomeraon-telefaona')),
                ('is_mpitsabo', models.BooleanField(default=False, verbose_name='Mpitsabo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Hafatra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('votoaty', models.TextField()),
                ('daty', models.DateTimeField(auto_now_add=True)),
                ('vakina', models.BooleanField(default=False)),
                ('mpandefa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hafatra_nandefasana', to=settings.AUTH_USER_MODEL)),
                ('mpandray', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hafatra_nakarina', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-daty'],
            },
        ),
        migrations.CreateModel(
            name='Mpitsabo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anarana', models.CharField(max_length=100)),
                ('sary', models.ImageField(blank=True, null=True, upload_to='sary_mpitsabo/')),
                ('momba', models.TextField(blank=True)),
                ('laharana', models.CharField(blank=True, max_length=100, verbose_name='Laharana fahamarinana')),
                ('taona_asa', models.PositiveIntegerField(default=0, verbose_name='Taona niasana')),
                ('mpampiasa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mpitsabo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ZavaManiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anarana', models.CharField(max_length=200)),
                ('famaritana', models.TextField()),
                ('sary', models.ImageField(blank=True, null=True, upload_to='sary_zava_maniry/')),
                ('daty_nampidirana', models.DateTimeField(auto_now_add=True)),
                ('aretina_tsaboina', models.ManyToManyField(blank=True, related_name='zava_maniry_tsaboina', to='fahasalamana.aretina')),
            ],
        ),
        migrations.CreateModel(
            name='Fitsaboana',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fomba_fampiasana', models.TextField()),
                ('daty_nampidirana', models.DateTimeField(auto_now_add=True)),
                ('aretina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fitsaboana', to='fahasalamana.aretina')),
                ('zava_maniry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fitsaboana', to='fahasalamana.zavamaniry')),
            ],
        ),
    ]
